name: Backup Nightly

on:
  # schedule:
  #   - cron:  '0 5,17 * * *'
  workflow_dispatch:
  
jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Dependencies
        run: |
          pip3 install beautifulsoup4 lxml requests
      - name: download
        shell: python
        run: |
          import requests
          from bs4 import BeautifulSoup
          from urllib.parse import urljoin
          import os
          import re

          base = "https://nightly.icpz.workers.dev/"
          source = "https://nightly.icpz.workers.dev/latest/"
          headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"}

          def download(url, path):
              r = requests.get(url, headers=headers, stream=True)
              r.raise_for_status()
              f = open(path, "wb")
              for chunk in r.iter_content(chunk_size=1024):
                  if chunk:
                      f.write(chunk)
              f.close()

          res = requests.get(source, headers=headers)
          html = BeautifulSoup(res.content, "lxml")
          tags = html.select("li > div > a")

          tag_name = re.search(r"202\d-\d{2}-\d{2}-g\w{7}",tags[0].string).group(0)
          print(tag_name)
          env_file = os.getenv('GITHUB_ENV')
          with open(env_file, "a") as GITHUB_ENV:
              GITHUB_ENV.write(f"tag_name={tag_name}")

          for tag in tags:
              url = urljoin(base,tag['href'])
              print(f"Downloading link: {url}", flush=True)
              out_file = tag.string
              if not os.path.isfile(out_file):
                  download(url, out_file)

      - name: Commit version & remove existing tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git fetch --tags
          git checkout version || git checkout -b version origin/version || ( git checkout --orphan version && git rm -rf . )
          echo -e "${{ env.tag_name }}" > nightly_version
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add nightly_version
          git diff-index --quiet HEAD || ( git commit -m "${{ env.tag_name }}" && git push origin version )
          git checkout main
          
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "clash*"
          commit: version
          name: "${{ env.tag_name }}"
          body: "**Downloads**: ![downloads](https://badgen.net/github/assets-dl/${{github.repository}}/${{ env.tag_name }}?cache=300)"
          tag: "${{ env.tag_name }}"
          allowUpdates: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
